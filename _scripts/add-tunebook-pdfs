#!/bin/sh

if [ $# -ne 1 ]
then
    echo "Usage: $0 <archive_directory>"
    exit
fi

ARCHIVEDIR=$1

#
# You may need to change the SOURCEDIR variable to
# match your directory structure i.e. the "GitHub"
# part
#
SOURCEDIR="${HOME}/GitHub/${ARCHIVEDIR}"
SITEDIR="${SOURCEDIR}/_site"

#
# Get any updates from main respository
#
cd ${SOURCEDIR}
git pull

#
# Build the ABC source files in ${SITEDIR}
#
bundle exec jekyll build
if [ $? -ne 0 ]
then
    exit
fi

#
# Get the list of files to process
#
cd ${SITEDIR}/tunebooks
ABCFILES=$(echo *abc)
echo "Processing: ${ABCFILES} "

#
# Build the PDF files in ${SOURCEDIR}
#
cd ${SOURCEDIR}/tunebooks

for ABCFILE in ${ABCFILES}
do
    ${SOURCEDIR}/_scripts/abc2pdf ${SITEDIR}/tunebooks/${ABCFILE}
done

cd ${SITEDIR}/tunebooks/other
OTHERABCFILES=$(echo *abc)
echo "Processing: ${OTHERABCFILES} "

cd ${SOURCEDIR}/tunebooks/other
for OTHERABCFILE in ${OTHERABCFILES}
do
    ${SOURCEDIR}/_scripts/abc2pdf-index ${SITEDIR}/tunebooks/other/${OTHERABCFILE}
done

cd ${SOURCEDIR}

TMPFILE=$(mktemp)
ls -l ${TMPFILE}
sed -e "s/These tunebooks were last updated at:.*/These tunebooks were last updated at: $(date)/" tunebooks.md > ${TMPFILE}
mv ${TMPFILE} tunebooks.md
ls -l ${TMPFILE}
#
# Push the new PDFs to the main site
# They'll get loaded next time there's an upgrade
#
git add .
git commit -m "Updating Tunebook PDFs"
git push
